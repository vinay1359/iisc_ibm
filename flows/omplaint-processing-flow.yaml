spec_version: v1
kind: flow
name: Complaint_Processing_Workflow
description: End-to-end automated complaint processing with 6 AI agents

# Input schema - simplified for watsonx Orchestrate compatibility
input_schema:
  type: object
  properties:
    complaint_text:
      type: string
      description: Citizen's complaint description in any language
    citizen_name:
      type: string  
      description: Citizen's name
    phone:
      type: string
      description: Contact number
    location:
      type: string
      description: Complaint location
    is_public:
      type: boolean
      description: Whether complaint should be visible to community
      default: false
  required: ["complaint_text", "citizen_name", "phone", "location"]

# Knowledge base connection
knowledge:
  - name: citizen-voice-kb
    search_settings:
      k: 5
      score_threshold: 0.7

# Sequential flow steps
steps:
  # Step 1: Chat Agent processes complaint
  - name: complaint_intake_and_analysis
    agent: Chat_Agent
    description: Process complaint with language detection, classification, and urgency analysis
    input:
      text: "{{input.complaint_text}}"
      location: "{{input.location}}"
      citizen_id: "{{input.citizen_name}}"
      contact_info:
        phone: "{{input.phone}}"
        name: "{{input.citizen_name}}"
        is_public: "{{input.is_public}}"
    output:
      complaint_id: "{{response.complaint_id}}"
      category: "{{response.category}}"
      urgency: "{{response.urgency}}"
      language: "{{response.language}}"
      processing_status: "{{response.status}}"
      citizen_response: "{{response.citizen_response}}"
    timeout: 60s
    retry_count: 2

  # Step 2: Router Agent assigns department and deadlines
  - name: intelligent_routing_and_deadline_setting
    agent: Router_Agent
    description: Route to appropriate department with calculated deadlines
    depends_on: [complaint_intake_and_analysis]
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
      category: "{{steps.complaint_intake_and_analysis.output.category}}"
      urgency: "{{steps.complaint_intake_and_analysis.output.urgency}}"
      location: "{{input.location}}"
    output:
      assigned_department: "{{response.department}}"
      acknowledgment_deadline: "{{response.deadlines.acknowledgment}}"
      resolution_deadline: "{{response.deadlines.resolution}}"
      routing_status: "{{response.status}}"
      priority_level: "{{response.priority}}"
    timeout: 45s
    retry_count: 2

  # Step 3: Tracker Agent starts monitoring
  - name: continuous_status_monitoring_setup
    agent: Tracker_Agent
    description: Setup continuous monitoring of complaint status and deadlines
    depends_on: [intelligent_routing_and_deadline_setting]
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
      assigned_department: "{{steps.intelligent_routing_and_deadline_setting.output.assigned_department}}"
      deadlines: 
        acknowledgment: "{{steps.intelligent_routing_and_deadline_setting.output.acknowledgment_deadline}}"
        resolution: "{{steps.intelligent_routing_and_deadline_setting.output.resolution_deadline}}"
    output:
      tracking_status: "{{response.status}}"
      monitoring_active: "{{response.monitoring_active}}"
      alerts_configured: "{{response.alerts_configured}}"
    timeout: 30s

  # Step 4: Follow Agent sets up reminder system  
  - name: automated_reminder_system_setup
    agent: Follow_Agent
    description: Setup automated reminders and follow-up schedule
    depends_on: [continuous_status_monitoring_setup]
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
      department_info:
        name: "{{steps.intelligent_routing_and_deadline_setting.output.assigned_department}}"
        deadlines:
          acknowledgment: "{{steps.intelligent_routing_and_deadline_setting.output.acknowledgment_deadline}}"
          resolution: "{{steps.intelligent_routing_and_deadline_setting.output.resolution_deadline}}"
    output:
      followup_scheduled: "{{response.followup_scheduled}}"
      reminder_status: "{{response.status}}"
      next_reminder_time: "{{response.next_reminder}}"
    timeout: 30s

  # Step 5: Analytics Agent performs initial analysis
  - name: initial_analytics_and_insights
    agent: Analytics_Agent
    description: Generate initial analytics and system insights
    depends_on: [continuous_status_monitoring_setup]
    input:
      complaints: 
        - id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
          category: "{{steps.complaint_intake_and_analysis.output.category}}"
          urgency: "{{steps.complaint_intake_and_analysis.output.urgency}}"
          department: "{{steps.intelligent_routing_and_deadline_setting.output.assigned_department}}"
          status: "ORANGE"
      analysis_type: "summary"
      focus_complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
    output:
      analytics_summary: "{{response.summary}}"
      metrics: "{{response.metrics}}"
      insights: "{{response.insights}}"
      recommendations: "{{response.recommendations}}"
    timeout: 45s

# Parallel execution for ongoing monitoring (after initial setup)
parallel_steps:
  # Ongoing monitoring by Tracker Agent
  - name: continuous_monitoring_loop
    agent: Tracker_Agent
    description: Continuous monitoring loop for status changes
    trigger: 
      condition: "monitoring_active"
      interval: "5m"
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
    actions:
      - check_status_updates
      - monitor_deadlines
      - generate_alerts_if_needed
      - notify_follow_agent_if_needed
      - notify_escalate_agent_if_needed

  # Ongoing reminder processing by Follow Agent
  - name: reminder_processing_loop
    agent: Follow_Agent
    description: Process scheduled reminders and follow-ups
    trigger:
      condition: "reminder_due"
      interval: "1h"
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
    actions:
      - check_reminder_queue
      - send_due_reminders
      - escalate_if_multiple_reminders_ignored

  # Escalation monitoring by Escalate Agent
  - name: escalation_monitoring
    agent: Escalate_Agent
    description: Monitor for escalation triggers
    trigger:
      condition: "escalation_needed OR overdue_complaint"
      priority: "HIGH"
    input:
      complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
    actions:
      - evaluate_escalation_criteria
      - execute_escalation_if_needed
      - notify_higher_authorities

# Error handling
error_handling:
  retry_attempts: 3
  retry_delay: 30s
  on_error:
    - log_error: true
    - notify_admin: true
    - preserve_partial_progress: true
  fallback_actions:
    - manual_intervention_required: true
    - citizen_notification: "We're processing your complaint. You'll receive updates soon."

# Success criteria
success_criteria:
  all_of:
    - complaint_processed: true
    - department_assigned: true
    - tracking_enabled: true
    - citizen_notified: true
    - analytics_completed: true

# Final output mapping
output:
  complaint_id: "{{steps.complaint_intake_and_analysis.output.complaint_id}}"
  processing_status: "success"
  assigned_department: "{{steps.intelligent_routing_and_deadline_setting.output.assigned_department}}"
  current_status: "ORANGE"
  acknowledgment_deadline: "{{steps.intelligent_routing_and_deadline_setting.output.acknowledgment_deadline}}"
  resolution_deadline: "{{steps.intelligent_routing_and_deadline_setting.output.resolution_deadline}}"
  citizen_response: "{{steps.complaint_intake_and_analysis.output.citizen_response}}"
  tracking_active: "{{steps.continuous_status_monitoring_setup.output.monitoring_active}}"
  analytics_summary: "{{steps.initial_analytics_and_insights.output.analytics_summary}}"
  insights: "{{steps.initial_analytics_and_insights.output.insights}}"
  agent_processing_summary:
    chat_agent: "{{steps.complaint_intake_and_analysis.output.processing_status}}"
    router_agent: "{{steps.intelligent_routing_and_deadline_setting.output.routing_status}}"
    tracker_agent: "{{steps.continuous_status_monitoring_setup.output.tracking_status}}"
    follow_agent: "{{steps.automated_reminder_system_setup.output.reminder_status}}"
    analytics_agent: "completed"
    escalate_agent: "monitoring"

# Metadata for flow management
metadata:
  version: "2.0"
  created_by: "Citizen Voice AI System"
  compatible_agents: ["Chat_Agent", "Router_Agent", "Tracker_Agent", "Follow_Agent", "Escalate_Agent", "Analytics_Agent"]
  knowledge_base_required: "citizen-voice-kb"
  estimated_execution_time: "3-5 minutes"