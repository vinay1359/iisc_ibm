spec_version: v1
kind: native
name: Router_Agent
description: Routes complaints to appropriate departments with deadlines and priority levels
instructions: |
  You are the Router Agent responsible for intelligent complaint routing. Your tasks:
  
  1. DEPARTMENT MAPPING:
     - electricity -> Delhi Electricity Regulatory Commission (DERC)
     - water -> Delhi Jal Board (DJB)  
     - road -> Public Works Department (PWD)
     - sanitation -> Municipal Corporation of Delhi (MCD)
     - health -> Department of Health & Family Welfare
     - general -> District Collector Office
  
  2. DEADLINE CALCULATION:
     Based on urgency and category:
     - CRITICAL: Same day response required
     - HIGH: 24-48 hours for acknowledgment, 3-5 days resolution
     - MEDIUM: 48-72 hours acknowledgment, 5-10 days resolution
     - LOW: 1 week acknowledgment, 2-4 weeks resolution
  
  3. PRIORITY ASSIGNMENT:
     Consider factors:
     - Public safety impact
     - Number of people affected
     - Essential service disruption
     - Previous complaint history in area
  
  4. STATUS UPDATES:
     - Update complaint status to ORANGE (Routed to Department)
     - Log routing decision with justification
     - Set automatic reminder triggers
     - Prepare escalation pathway
  
  5. OUTPUT:
     Provide routing decision with:
     - assigned_department: full department name
     - contact_details: department contact information
     - deadline_acknowledgment: when department must respond
     - deadline_resolution: when problem should be resolved
     - priority_level: assigned priority
     - escalation_path: next level authority if needed
     - routing_rationale: explanation of routing decision
     
llm: watsonx/meta-llama/llama-3-2-90b-vision-instruct
style: default
collaborators:
  - Chat_Agent
  - Tracker_Agent
import: knowledge.shared_memory

tool:
  - department_mapper
  - deadline_calculator

on_message:
  - name: route_complaint
    description: Receive new complaint message, route complaint, update shared memory, notify Tracker_Agent
    steps:
      - action: get_message
        run: |
          from knowledge import shared_memory
          messages = shared_memory.get_messages_for_agent("Router_Agent")
          # Filter for new_complaint messages
          new_complaints = [m for m in messages if m["type"] == "new_complaint"]
          if not new_complaints:
              return {"status": "No new complaints"}
          message = new_complaints[0]
          complaint_id = message["content"]["complaint_id"]
          complaint = shared_memory.get_complaint(complaint_id)
          return {"complaint": complaint, "message_id": message["id"]}
        output: complaint_data
      - action: map_department
        input:
          category: "{{complaint_data.complaint.category}}"
          subcategory: "{{complaint_data.complaint.subcategory}}"
          urgency: "{{complaint_data.complaint.urgency}}"
          location: "{{complaint_data.complaint.location}}"
        output: routing_info
      - action: calculate_deadlines
        input:
          urgency: "{{complaint_data.complaint.urgency}}"
          category: "{{complaint_data.complaint.category}}"
        output: deadline_info
      - action: update_complaint_status
        run: |
          from knowledge import shared_memory
          complaint = complaint_data["complaint"]
          complaint["status"] = "ROUTED"
          complaint["assigned_department"] = routing_info["assigned_department"]
          complaint["routing_details"] = routing_info
          complaint["deadlines"] = deadline_info
          shared_memory.save_complaint(complaint["id"], complaint)
          # Mark message read
          shared_memory.mark_message_read(complaint_data["message_id"])
          # Send message to Tracker_Agent
          shared_memory.add_message(
              sender_agent="Router_Agent",
              receiver_agent="Tracker_Agent",
              message_type="routed_complaint",
              content={"complaint_id": complaint["id"]}
          )
      - action: respond
        output: |
          {
            "status": "Complaint routed and Tracker_Agent notified",
            "complaint_id": "{{complaint_data.complaint.id}}"
          }
